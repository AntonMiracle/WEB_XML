<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">

    <!-- ===== servlets and mapping ===== -->
    <!-- Need add servlet lib to classpath -->
    <servlet>
        <servlet-name>init</servlet-name>
        <servlet-class>controller.InitServlet</servlet-class>
        <load-on-startup>0</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>init</servlet-name>
        <url-pattern>/init</url-pattern>
    </servlet-mapping>
    <!--
    How server choose what mapping url need to choose.
    He searching from maximum matching. So
    if "/1/sdsdf/sdf/s" -   choose "/1/*" controller1
    if "/1/3/sfds/sdf" -    choose "/1/3/*" controller3
    if "/1/3" -             choose "/1/3" controller4
    if "/2" -               choose "/2" controller2
    -->
    <servlet>
        <servlet-name>controller1</servlet-name>
        <servlet-class>controller.Controller1</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>controller1</servlet-name>
        <url-pattern>/1/*</url-pattern>
    </servlet-mapping>
    <!--
    Servlet - controller2 mapping by @annotation,
    if mapping by web.xml and @annotation in the same time will be exception
    -->
    <servlet>
        <servlet-name>controller3</servlet-name>
        <servlet-class>controller.Controller3</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>controller3</servlet-name>
        <url-pattern>/1/3/*</url-pattern>
    </servlet-mapping>
    <servlet>
        <servlet-name>controller4</servlet-name>
        <servlet-class>controller.Controller4</servlet-class>
        <init-param>
            <param-name>4param1</param-name>
            <param-value>webxml-controller4-pram1</param-value>
        </init-param>
        <init-param>
            <param-name>4param2</param-name>
            <param-value>webxml-controller4-pram2</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>controller4</servlet-name>
        <url-pattern>/1/3</url-pattern>
    </servlet-mapping>

    <!-- ======= JSP init param for JSP ======-->
    <!-- JSP по сути Servlet можно указывать и использовать теже параметры как и при работе Servlet -->
    <servlet>
        <servlet-name>jsp1</servlet-name>
        <jsp-file>/index.jsp</jsp-file>
        <init-param>
            <param-name>jspparam1</param-name>
            <param-value>jspparam1</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>jsp1</servlet-name>
        <url-pattern>/indexjsp</url-pattern>
    </servlet-mapping>
    <!-- ====== Servlet with check roles ======= -->
    <servlet>
        <servlet-name>AuthServlet</servlet-name>
        <servlet-class>controller.AuthServlet</servlet-class>
        <security-role-ref>
            <role-name>Administrator</role-name> <!-- имя роли внутри сервлета -->
            <role-link>admin</role-link> <!--  реальная созданая роль в <security-role>>-->
        </security-role-ref>
    </servlet>
    <servlet-mapping>
        <servlet-name>AuthServlet</servlet-name>
        <url-pattern>/auth</url-pattern>
    </servlet-mapping>

    <!-- ======= Context param ============= -->
    <!-- Для каждого параметра нужно определить отдельно context-param таг -->
    <context-param>
        <param-name>param1</param-name>
        <param-value>webxml-param1</param-value>
    </context-param>
    <context-param>
        <param-name>param2</param-name>
        <param-value>webxml-param2</param-value>
    </context-param>

    <!-- ======== session config =============== -->
    <!-- по умолчанию 30 min, значение указываем в минутах -->
    <session-config>
        <session-timeout>20</session-timeout>
    </session-config>

    <!-- Ищет кокую страницу загрузить по умолчанию с верху вниз -->
    <!-- Если маппинг не содержит "/*" то будет загружена страница по умолчанию -->
    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
        <welcome-file>index.html</welcome-file>
    </welcome-file-list>

    <!-- ==== LOCALE ====-->
    <!-- Устанавливаем для локации encoding -->
    <locale-encoding-mapping-list>
        <locale-encoding-mapping>
            <locale>ja</locale>
            <encoding>Shift_JIS</encoding>
        </locale-encoding-mapping>
    </locale-encoding-mapping-list>

    <!-- ==== For work in clusters ===-->
    <!-- Некотороые ресурсы не делимы на кластеры -->
    <distributable/>

    <!-- ======== Errors ======-->
    <!-- Определяем, какой сервлет будет загружен при ошщибках -->
    <error-page>
        <error-code>404</error-code>
        <location>/error.jsp</location>
    </error-page>
    <error-page>
        <exception-type>java.io.IOException</exception-type>
        <location>/errorIO.jsp</location>
    </error-page>

    <!--===JSP config ===-->
    <jsp-config>
        <jsp-property-group>
            <url-pattern>/error.jsp
            </url-pattern> <!-- указываем какие JSP подвердены конфигурации. Можно указать все - "/*" -->
            <el-ignored>false</el-ignored>
            <scripting-invalid>true</scripting-invalid>
            <is-xml>true</is-xml> <!--  Проверяет правильность написания согласно XML стандарта,
                                        закрытые скобки, ковычки и т.д. в ином случае будет ошибка валидации-->
        </jsp-property-group>
        <jsp-property-group>
            <!-- Физически склеивает файлы header.jsp + main.jsp + footer,jsp-->
            <url-pattern>/main.jsp</url-pattern>
            <include-prelude>/header.jsp</include-prelude>
            <include-coda>/footer.jsp</include-coda>
        </jsp-property-group>
    </jsp-config>

    <!-- === Login config  VERSION 2==== -->
    <!-- это аутентификация указаная в самом сервере Tomcat -> conf -> tomcat-users.xml -->
    <login-config>
        <!--<auth-method>BASIC</auth-method>-->
        <auth-method>FORM</auth-method>
        <form-login-config>
            <form-login-page>/login-page.jsp</form-login-page>
            <form-error-page>/login-error.jsp</form-error-page>
        </form-login-config>
    </login-config>

    <!-- ===== Security constrained === -->
    <security-constraint>

        <web-resource-collection>
            <web-resource-name>secutreJsp</web-resource-name>
            <url-pattern>/restricted.jsp</url-pattern> <!-- Патерн по которому ресурсф будут доступны с ролью admin -->
            <http-method>post</http-method> <!-- доступ только через метод post -->
        </web-resource-collection>

        <web-resource-collection>
            <web-resource-name>authServlet
            </web-resource-name> <!-- указываем название ресурса и патерн который будет требовать залогиниться -->
            <url-pattern>/auth</url-pattern>
        </web-resource-collection>

        <auth-constraint>
            <role-name>admin</role-name>
        </auth-constraint>

    </security-constraint>

    <!-- добавляем роли которые совпадают с ролями добавлеными в сервер Tomcat -> conf -> tomcat-users.xml -->
    <security-role>
        <role-name>admin</role-name>
    </security-role>
    <security-role>
        <role-name>user</role-name>
    </security-role>
</web-app>